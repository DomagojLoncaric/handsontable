(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{676:function(t,e,a){"use strict";a.r(e);var r=a(91),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"cell-functions"}},[a("span",{staticClass:"header-framework"},[t._v("JavaScript Data Grid")]),a("a",{staticClass:"header-anchor",attrs:{href:"#cell-functions"}}),t._v(" Cell functions")]),t._v(" "),a("p",[t._v("Render, edit, and validate the contents of your cells, using Handsontable's cell functions. Quickly set up your cell, using cell types.")]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("div",{staticClass:"toc-container-header"},[t._v("In this article")]),a("ul",[a("li",[a("a",{attrs:{href:"#overview"}},[t._v("Overview")])]),a("li",[a("a",{attrs:{href:"#renderer"}},[t._v("Renderer")])]),a("li",[a("a",{attrs:{href:"#editor"}},[t._v("Editor")])]),a("li",[a("a",{attrs:{href:"#validator"}},[t._v("Validator")])]),a("li",[a("a",{attrs:{href:"#cell-type"}},[t._v("Cell type")])]),a("li",[a("a",{attrs:{href:"#cell-functions-getters"}},[t._v("Cell functions getters")])]),a("li",[a("a",{attrs:{href:"#related-articles"}},[t._v("Related articles")]),a("ul",[a("li",[a("a",{attrs:{href:"#related-guides"}},[t._v("Related guides")])]),a("li",[a("a",{attrs:{href:"#related-api-reference"}},[t._v("Related API reference")])])])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"overview"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#overview"}}),t._v(" Overview")]),t._v(" "),a("p",[t._v("With every cell in the Handsontable there are 3 associated functions:")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#renderer"}},[t._v("renderer")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#editor"}},[t._v("editor")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#validator"}},[t._v("validator")])])]),t._v(" "),a("p",[t._v("Each of those functions are responsible for a different cell behavior. You can define them separately or use a "),a("a",{attrs:{href:"#cell-type"}},[t._v("cell type")]),t._v(" to define all three at once.")]),t._v(" "),a("h2",{attrs:{id:"renderer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderer"}}),t._v(" Renderer")]),t._v(" "),a("p",[t._v("Handsontable does not display the values stored in the data source directly. Instead, every time a value from data source needs to be displayed in a table cell, it is passed to the cell "),a("code",[t._v("renderer")]),t._v(" function, together with the table cell object of type "),a("code",[t._v("HTMLTableCellElement")]),t._v(" (DOM node), along with other useful information.")]),t._v(" "),a("p",[a("code",[t._v("Renderer")]),t._v(" is expected to format the passed value and place it as a content of the cell object. "),a("code",[t._v("Renderer")]),t._v(" can also alter the cell class list, i.e. it can add a "),a("code",[t._v("htInvalid")]),t._v(" class to let the user know, that the displayed value is invalid.")]),t._v(" "),a("h2",{attrs:{id:"editor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#editor"}}),t._v(" Editor")]),t._v(" "),a("p",[t._v("Cell editors are the most complex cell functions. We have prepared a separate page "),a("RouterLink",{attrs:{to:"/javascript-data-grid/cell-editor/"}},[t._v("custom cell editor")]),t._v(" explaining how cell edit works and how to write your own cell editor.")],1),t._v(" "),a("h2",{attrs:{id:"validator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#validator"}}),t._v(" Validator")]),t._v(" "),a("p",[t._v("Cell validator can be either a function or a regular expression. A cell is considered valid, when the validator function calls a "),a("code",[t._v("callback")]),t._v(" (passed as one of the "),a("code",[t._v("validator")]),t._v(" arguments) with "),a("code",[t._v("true")]),t._v(" or the validation regex "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test",target:"_blank",rel:"nofollow noopener noreferrer"}},[a("code",[t._v("test()")]),a("OutboundLink")],1),t._v(" method returns "),a("code",[t._v("true")]),t._v(". Because the validity of a value is determined only by the argument that is passed to "),a("code",[t._v("callback")]),t._v(", "),a("code",[t._v("validator")]),t._v(" function can be synchronous or asynchronous.")]),t._v(" "),a("p",[t._v("Contrary to "),a("code",[t._v("renderer")]),t._v(" and "),a("code",[t._v("editor")]),t._v(" functions, the "),a("code",[t._v("validator")]),t._v(" function doesn't have to be defined for each cell. If the "),a("code",[t._v("validator")]),t._v(" function is not defined, then a cell value is always valid.")]),t._v(" "),a("h2",{attrs:{id:"cell-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cell-type"}}),t._v(" Cell type")]),t._v(" "),a("p",[t._v("Manually defining those functions for cells or columns would be tedious, so to simplify the configuration, Handsontable introduced "),a("RouterLink",{attrs:{to:"/javascript-data-grid/cell-type/"}},[t._v("cell types")]),t._v(".")],1),t._v(" "),a("h2",{attrs:{id:"cell-functions-getters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cell-functions-getters"}}),t._v(" Cell functions getters")]),t._v(" "),a("p"),t._v(" "),a("p",[t._v("If, for some reason, you have to get the "),a("code",[t._v("renderer")]),t._v(", "),a("code",[t._v("editor")]),t._v(" or "),a("code",[t._v("validator")]),t._v(" function of specific cell you can use standard "),a("RouterLink",{attrs:{to:"/javascript-data-grid/api/core/#getcellmeta"}},[a("code",[t._v("getCellMeta()")])]),t._v(" method to get all properties of particular cell and then refer to cell functions like so:")],1),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// get cell properties for cell [0, 0]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cellProperties "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" hot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCellMeta")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ncellProperties"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("renderer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// get cell renderer")]),t._v("\ncellProperties"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("editor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// get cell editor")]),t._v("\ncellProperties"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("validator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// get cell validator")]),t._v("\n")])])]),a("p",[t._v("However, you have to remember that "),a("RouterLink",{attrs:{to:"/javascript-data-grid/api/core/#getcellmeta"}},[a("code",[t._v("getCellMeta()")])]),t._v(' return cell properties "as they are", which means that if you use cell type to set cell functions, instead of defining functions directly those cell functions will be '),a("code",[t._v("undefined")]),t._v(":")],1),t._v(" "),a("p"),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Handsontable "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'handsontable'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'handsontable/dist/handsontable.full.min.css'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" container "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#container'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" hot "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Handsontable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("columns")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'numeric'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// get cell properties for cell [0, 0]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cellProperties "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" hot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCellMeta")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ncellProperties"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("renderer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\ncellProperties"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("editor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\ncellProperties"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("validator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\ncellProperties"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "numeric"')]),t._v("\n")])])]),a("p"),t._v(" "),a("p"),t._v(" "),a("p",[t._v("To get the actual cell function use appropriate "),a("em",[t._v("cell function getter")]),t._v(":")]),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/javascript-data-grid/api/core/#getcellrenderer"}},[a("code",[t._v("getCellRenderer(row, col)")])])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/javascript-data-grid/api/core/#getcelleditor"}},[a("code",[t._v("getCellEditor(row, col)")])])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/javascript-data-grid/api/core/#getcellvalidator"}},[a("code",[t._v("getCellValidator(row, col)")])])],1)]),t._v(" "),a("p",[t._v("Those functions will always return an appropriate value, regardless of whether cell functions have been defined directly or using a cell type.")]),t._v(" "),a("h2",{attrs:{id:"related-articles"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#related-articles"}}),t._v(" Related articles")]),t._v(" "),a("h3",{attrs:{id:"related-guides"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#related-guides"}}),t._v(" Related guides")]),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/javascript-data-grid/cell-editor/"}},[t._v("Cell editor")])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/javascript-data-grid/cell-renderer/"}},[t._v("Cell renderer")])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/javascript-data-grid/cell-validator/"}},[t._v("Cell validator")])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/javascript-data-grid/cell-type/"}},[t._v("Cell type")])],1)]),t._v(" "),a("h3",{attrs:{id:"related-api-reference"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#related-api-reference"}}),t._v(" Related API reference")]),t._v(" "),a("ul",[a("li",[t._v("Configuration options:\n"),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/javascript-data-grid/api/options/#editor"}},[a("code",[t._v("editor")])])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/javascript-data-grid/api/options/#renderer"}},[a("code",[t._v("renderer")])])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/javascript-data-grid/api/options/#type"}},[a("code",[t._v("type")])])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/javascript-data-grid/api/options/#validator"}},[a("code",[t._v("validator")])])],1)])]),t._v(" "),a("li",[t._v("Core methods:\n"),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/javascript-data-grid/api/core/#destroyeditor"}},[a("code",[t._v("destroyEditor()")])])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/javascript-data-grid/api/core/#getactiveeditor"}},[a("code",[t._v("getActiveEditor()")])])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/javascript-data-grid/api/core/#getcelleditor"}},[a("code",[t._v("getCellEditor()")])])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/javascript-data-grid/api/core/#getcellmeta"}},[a("code",[t._v("getCellMeta()")])])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/javascript-data-grid/api/core/#getcellmetaatrow"}},[a("code",[t._v("getCellMetaAtRow()")])])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/javascript-data-grid/api/core/#getcellsmeta"}},[a("code",[t._v("getCellsMeta()")])])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/javascript-data-grid/api/core/#getcellrenderer"}},[a("code",[t._v("getCellRenderer()")])])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/javascript-data-grid/api/core/#getcellvalidator"}},[a("code",[t._v("getCellValidator()")])])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/javascript-data-grid/api/core/#setcellmeta"}},[a("code",[t._v("setCellMeta()")])])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/javascript-data-grid/api/core/#setcellmetaobject"}},[a("code",[t._v("setCellMetaObject()")])])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/javascript-data-grid/api/core/#removecellmeta"}},[a("code",[t._v("removeCellMeta()")])])],1)])]),t._v(" "),a("li",[t._v("Hooks:\n"),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/javascript-data-grid/api/hooks/#afterbeginediting"}},[a("code",[t._v("afterBeginEditing")])])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/javascript-data-grid/api/hooks/#aftergetcellmeta"}},[a("code",[t._v("afterGetCellMeta")])])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/javascript-data-grid/api/hooks/#aftergetcolumnheaderrenderers"}},[a("code",[t._v("afterGetColumnHeaderRenderers")])])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/javascript-data-grid/api/hooks/#aftergetrowheaderrenderers"}},[a("code",[t._v("afterGetRowHeaderRenderers")])])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/javascript-data-grid/api/hooks/#aftervalidate"}},[a("code",[t._v("afterValidate")])])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/javascript-data-grid/api/hooks/#afterrenderer"}},[a("code",[t._v("afterRenderer")])])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/javascript-data-grid/api/hooks/#beforegetcellmeta"}},[a("code",[t._v("beforeGetCellMeta")])])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/javascript-data-grid/api/hooks/#beforerenderer"}},[a("code",[t._v("beforeRenderer")])])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/javascript-data-grid/api/hooks/#beforevalidate"}},[a("code",[t._v("beforeValidate")])])],1)])])])])}),[],!1,null,null,null);e.default=s.exports}}]);